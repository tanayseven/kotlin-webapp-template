plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.0'
    id 'application'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
    id "org.liquibase.gradle" version "2.1.1"
}

repositories {
    mavenCentral()
}

configurations {
    ktlint
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.0'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation "io.ktor:ktor-server-core:1.6.7"
    implementation "io.ktor:ktor-server-netty:1.6.7"
    implementation "ch.qos.logback:logback-classic:1.2.5"
    implementation "io.ktor:ktor-serialization:1.6.7"
    implementation "io.arrow-kt:arrow-core:1.0.1"
    implementation "io.ktor:ktor-pebble:1.6.7"
    implementation "org.ktorm:ktorm-core:3.2.0"
    implementation "org.postgresql:postgresql:42.2.6"

    liquibaseRuntime 'org.liquibase:liquibase-core:4.5.0'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.0'
    liquibaseRuntime 'info.picocli:picocli:4.6.1'
    liquibaseRuntime 'mysql:mysql-connector-java:5.1.34'

    testImplementation "io.kotest.extensions:kotest-assertions-ktor:1.0.3"
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5:1.6.0'
    testImplementation 'io.kotest:kotest-runner-junit5:5.0.3'
    testImplementation 'io.ktor:ktor-server-test-host:1.6.7'
    testImplementation "org.jetbrains.kotlin:kotlin-test:1.6.10"

    ktlint "com.pinterest:ktlint:0.43.2"
}

liquibase {
    activities.register("main") {
        this.arguments = [
                "logLevel"     : "info",
                "changeLogFile": "src/main/resources/db.changelog.yaml",
                "url"          : "jdbc:postgresql://localhost:5432/dbName",
                "username"     : "userName",
                "password"     : "secret"
        ]
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
    jvmArgs("--add-opens", "java.base/java.lang=ALL-UNNAMED")
    // temporary fix till we get fix for: https://github.com/pinterest/ktlint/issues/1195
}

application {
    // Define the main class for the application.
    mainClass = 'com.tanayseven.simple_web_app.AppKt'
}

test {
    useJUnitPlatform()
}
